---
const performances = [
    {
        title: "Feria del Huapango Salvaje",
        date: "Julio 15, 2024",
        location: "Puebla, Puebla",
        image: "pres01.webp",
    },
    {
        title: "Festival Cultural de la Sierra de los Monos",
        date: "Agosto 5, 2024",
        location: "Jacala, Hidalgo",
        image: "pres02.webp",
    },
    {
        title: "Gala de Jóvenes Gorilas",
        date: "Septiembre 10, 2024",
        location: "Teatro Hidalgo Bartolomé de Medina, Pachuca",
        image: "pres03.webp",
    },
];
---

<section id="upcoming" class="performances">
    <div class="container">
        <h2>Próximas actuaciones</h2>
        <div class="performance-list">
            {
                performances.map((performance, index) => (
                    <div
                        class="performance-card"
                        style={`animation-delay: ${index * 0.2}s`}
                    >
                        <img
                            src={performance.image}
                            alt={performance.title}
                            class="performance-image"
                        />
                        <div class="performance-details">
                            <h3>{performance.title}</h3>
                            <p class="date">{performance.date}</p>
                            <p class="location">{performance.location}</p>
                        </div>
                    </div>
                ))
            }
        </div>
    </div>
</section>

<!-- Modal -->
<div id="imageModal" class="modal">
    <span class="close">&times;</span>
    <img class="modal-content" id="modalImage" />
    <div id="caption"></div>
</div>

<script>
    function handleImageClick(event: MouseEvent) {
        const target = event.target as HTMLImageElement;
        if (target.classList.contains("performance-image")) {
            openModal(target.src, target.alt);
        }
    }

    function openModal(imageSrc: string, imageAlt: string) {
        const modal = document.getElementById("imageModal") as HTMLElement;
        const modalImg = document.getElementById("modalImage") as HTMLImageElement;
        const captionText = document.getElementById("caption") as HTMLElement;

        modal.style.display = "block";
        modalImg.src = imageSrc;
        captionText.innerHTML = imageAlt;
    }

    function closeModal() {
        const modal = document.getElementById("imageModal") as HTMLElement;
        modal.style.display = "none";
    }

    document.addEventListener("DOMContentLoaded", (event) => {
        const performanceList = document.querySelector(".performance-list") as HTMLElement;
        performanceList.addEventListener("click", handleImageClick);

        const closeButton = document.querySelector(".close") as HTMLElement;
        closeButton.addEventListener("click", closeModal);

        const modal = document.getElementById("imageModal") as HTMLElement;
        window.addEventListener("click", (event) => {
            if (event.target === modal) {
                closeModal();
            }
        });
    });
</script>

<style>
    .performances {
        background-color: rgb(var(--background));
        padding: 6rem 0;
    }
    h2 {
        text-align: center;
        color: rgb(var(--accent));
        font-size: 3rem;
        margin-bottom: 3rem;
    }
    .performance-list {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 2rem;
    }
    .performance-card {
        background-color: white;
        border-radius: 15px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
        animation: fadeInUp 0.5s ease-out forwards;
        opacity: 0;
        overflow: hidden;
    }
    .performance-card:hover {
        transform: translateY(-10px);
        box-shadow: 0 15px 30px rgba(0, 0, 0, 0.2);
    }
    .performance-image {
        width: 100%;
        height: 200px;
        object-fit: cover;
        cursor: pointer;
    }
    .performance-details {
        padding: 2rem;
    }
    h3 {
        color: rgb(var(--accent));
        margin-bottom: 1rem;
        font-size: 1.5rem;
    }
    .date,
    .location {
        margin: 0.5rem 0;
    }
    .date {
        font-weight: bold;
        color: rgb(var(--accent-dark));
    }
    @keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    /* Modal styles */
    .modal {
        display: none;
        position: fixed;
        z-index: 1000;
        padding-top: 100px;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0, 0, 0, 0.9);
    }

    .modal-content {
        margin: auto;
        display: block;
        width: 80%;
        max-width: 700px;
    }

    #caption {
        margin: auto;
        display: block;
        width: 80%;
        max-width: 700px;
        text-align: center;
        color: #ccc;
        padding: 10px 0;
        height: 150px;
    }

    .modal-content,
    #caption {
        animation-name: zoom;
        animation-duration: 0.6s;
    }

    @keyframes zoom {
        from {
            transform: scale(0);
        }
        to {
            transform: scale(1);
        }
    }

    .close {
        position: absolute;
        top: 15px;
        right: 35px;
        color: #f1f1f1;
        font-size: 40px;
        font-weight: bold;
        transition: 0.3s;
    }

    .close:hover,
    .close:focus {
        color: #bbb;
        text-decoration: none;
        cursor: pointer;
    }
</style>
