---
import { Image } from "astro:assets";

const bentoItems = [
    { src: "/hero_1.webp", alt: "Diego practicing violin", size: "large" },
    { src: "/hero_2.webp", alt: "Diego's violin close-up", size: "small" },
    { src: "/hero_3.webp", alt: "Diego with his music teacher", size: "small" },
    { src: "/hero_4.webp", alt: "Diego's sheet music", size: "medium" },
    { src: "/hero_5.webp", alt: "Diego at a music workshop", size: "medium" },
    { src: "/pres01.webp", alt: "Diego at a music workshop", size: "medium" },
    { src: "/hero_3.webp", alt: "Diego at a music workshop", size: "medium" },
    {
        src: "/pres03.webp",
        alt: "Diego's awards and certificates",
        size: "small",
    },
    {
        src: "/pres02.webp",
        alt: "Diego's awards and certificates",
        size: "small",
    },
];
---

<section id="masonry-bento-gallery" class="masonry-bento-gallery">
    <div class="container">
        <h2>Diego's Musical Journey</h2>
        <div class="masonry-grid">
            {
                bentoItems.map((item, index) => (
                    <div
                        class="masonry-item"
                        style={`height: ${item.height}px;`}
                        data-index={index}
                    >
                        <Image
                            src={item.src}
                            alt={item.alt}
                            width={400}
                            height={item.height}
                        />
                        <div class="overlay">
                            <p class="title">{item.alt}</p>
                            <span class="category">{item.category}</span>
                        </div>
                    </div>
                ))
            }
        </div>
    </div>
</section>

<div id="imageModal" class="modal">
    <span class="close">&times;</span>
    <img class="modal-content" id="modalImage" />
    <div id="caption"></div>
</div>

<style>
    .masonry-bento-gallery {
        background-color: #f5f5f5;
        padding: 6rem 0;
    }
    .container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 0 1rem;
    }
    h2 {
        text-align: center;
        color: #333;
        font-size: 3rem;
        margin-bottom: 3rem;
    }
    .masonry-grid {
        columns: 4 200px;
        column-gap: 1rem;
    }
    .masonry-item {
        break-inside: avoid;
        margin-bottom: 1rem;
        position: relative;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        transition:
            transform 0.3s ease,
            box-shadow 0.3s ease;
        cursor: pointer;
    }
    .masonry-item:hover {
        transform: translateY(-5px);
        box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
    }
    .masonry-item img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        display: block;
    }
    .overlay {
        position: absolute;
        bottom: 0;
        left: 0;
        right: 0;
        background: linear-gradient(to top, rgba(0, 0, 0, 0.8), transparent);
        color: white;
        padding: 1rem;
        transform: translateY(100%);
        transition: transform 0.3s ease;
    }
    .masonry-item:hover .overlay {
        transform: translateY(0);
    }
    .title {
        margin: 0;
        font-size: 1rem;
        font-weight: bold;
    }
    .category {
        display: inline-block;
        background-color: rgba(255, 255, 255, 0.2);
        padding: 0.2rem 0.5rem;
        border-radius: 20px;
        font-size: 0.8rem;
        margin-top: 0.5rem;
    }
    /* Modal styles */
    .modal {
        display: none;
        position: fixed;
        z-index: 1000;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0, 0, 0, 0.9);
    }
    .modal-content {
        margin: auto;
        display: block;
        width: 80%;
        max-width: 700px;
        max-height: 80vh;
        object-fit: contain;
    }
    #caption {
        margin: auto;
        display: block;
        width: 80%;
        max-width: 700px;
        text-align: center;
        color: #ccc;
        padding: 10px 0;
        height: 150px;
    }
    .close {
        position: absolute;
        top: 15px;
        right: 35px;
        color: #f1f1f1;
        font-size: 40px;
        font-weight: bold;
        transition: 0.3s;
        cursor: pointer;
    }
    .close:hover,
    .close:focus {
        color: #bbb;
        text-decoration: none;
        cursor: pointer;
    }
    @media (max-width: 768px) {
        .masonry-grid {
            columns: 2 150px;
        }
        .modal-content {
            width: 100%;
        }
    }
</style>

<script>
    const modal = document.getElementById("imageModal");
    const modalImg = document.getElementById("modalImage") as HTMLImageElement;
    const captionText = document.getElementById("caption");
    const closeBtn = document.getElementsByClassName("close")[0];

        document.querySelectorAll(".masonry-item").forEach((item) => {
            item.addEventListener("click", function () {
                const img = this.querySelector("img");
                const alt = img.alt;
                const category = this.querySelector(".category").textContent;

                modal.style.display = "block";
                modalImg.src = img.src;
                captionText.innerHTML = `${alt}<br><span class="modal-category">${category}</span>`;
            });
        });

    closeBtn.onclick = function () {
        modal.style.display = "none";
    };

        window.onclick = function (event) {
            if (event.target == modal) {
                modal.style.display = "none";
            }
        };
    });
</script>